version: '3.8'

services:
  redis:
    container_name: code_inspector_redis
    image: redis
    restart: always
    ports:
      - "6379:6379"

  celery-beat:
    container_name: code_inspector_celery_beat
    build: ./backend
    command: celery -A code_inspector beat -l debug
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_HOST=db
    volumes:
      - media:/app/media
    depends_on:
      celery:
        condition: service_started

  celery:
    container_name: code_inspector_celery
    build: ./backend
    command: celery -A code_inspector worker -l debug
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_HOST=db
    volumes:
      - media:/app/media
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy

  flower:
    container_name: code_inspector_flower
    image: mher/flower:0.9.7
    command: flower --broker=redis://redis:6379 --port=7777
    ports:
      - "7777:7777"
    depends_on:
      - redis

  backend:
    container_name: code_inspector_backend
    build: ./backend
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_HOST=db
    ports:
      - "8080:8080"
    volumes:
      - media:/app/media
    depends_on:
      celery-beat:
        condition: service_started
      migrations:
        condition: service_completed_successfully

  migrations:
    container_name: code_inspector_migrations
    build: ./backend
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate

  db:
    container_name: code_inspector_db
    image: postgres:15.2
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ./backend/.env
    healthcheck:
      test: pg_isready -U admin -d code_inspector
      interval: 3s
      retries: 10
      timeout: 3s
    volumes:
      - pg_data:/var/lib/postgresql/data/
volumes:
  pg_data:
  media: